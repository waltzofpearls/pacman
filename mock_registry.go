// Code generated by MockGen. DO NOT EDIT.
// Source: registry.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// RegistryMock is a mock of registry interface.
type RegistryMock struct {
	ctrl     *gomock.Controller
	recorder *RegistryMockMockRecorder
}

// RegistryMockMockRecorder is the mock recorder for RegistryMock.
type RegistryMockMockRecorder struct {
	mock *RegistryMock
}

// NewRegistryMock creates a new mock instance.
func NewRegistryMock(ctrl *gomock.Controller) *RegistryMock {
	mock := &RegistryMock{ctrl: ctrl}
	mock.recorder = &RegistryMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *RegistryMock) EXPECT() *RegistryMockMockRecorder {
	return m.recorder
}

// add mocks base method.
func (m *RegistryMock) add(name string, deps []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "add", name, deps)
	ret0, _ := ret[0].(error)
	return ret0
}

// add indicates an expected call of add.
func (mr *RegistryMockMockRecorder) add(name, deps interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "add", reflect.TypeOf((*RegistryMock)(nil).add), name, deps)
}

// list mocks base method.
func (m *RegistryMock) list() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "list")
	ret0, _ := ret[0].(string)
	return ret0
}

// list indicates an expected call of list.
func (mr *RegistryMockMockRecorder) list() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "list", reflect.TypeOf((*RegistryMock)(nil).list))
}

// remove mocks base method.
func (m *RegistryMock) remove(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "remove", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// remove indicates an expected call of remove.
func (mr *RegistryMockMockRecorder) remove(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "remove", reflect.TypeOf((*RegistryMock)(nil).remove), name)
}
